#!/bin/bash

set -euf -o pipefail

source "local/project-config"
source "local/subtree-config"

if test "$#" != "1"; then

	cat <<-END >&2

		Syntax:

		  $0 add    Adds new subtrees
		  $0 merge  Merge changes into master branch
		  $0 push   Push changes to project branch
		  $0 pull   Pull changes from master branch

	END

fi

case "$1" in

(add)

	for subtree in "${subtrees[@]}"; do

		IFS=: read subtree_owner subtree_name subtree_path <<<"$subtree"

		subtree_repo="git@github.com:$subtree_owner/$subtree_name"

		if test -d "$subtree_path"; then
			echo "Skipping $subtree_path (already exists)" >&2
			continue
		fi

		echo "Adding $subtree_path from $subtree_name"

		git subtree add \
			--prefix "$subtree_path" \
			"$subtree_repo" \
			"master" \
			--message "Add subtree $subtree_path from $subtree_name (master)" \
			--squash

	done

	;;

(merge)

	for subtree in "${subtrees[@]}"; do

		IFS=: read subtree_owner subtree_name subtree_path <<<"$subtree"

		cd "../$subtree_name"

		git fetch

		git checkout "$project_name"
		git pull

		git checkout "master"
		git pull

		git merge "$project_name"

		git push "origin" "master"

		cd -

	done

	;;

(pull)

	for subtree in "${subtrees[@]}"; do

		IFS=: read subtree_owner subtree_name subtree_path <<<"$subtree"

		subtree_repo="git@github.com:$subtree_owner/$subtree_name"

		git subtree pull \
			--prefix "$subtree_path" \
			"$subtree_repo" \
			"master" \
			--message "Merge master of $subtree_name" \
			--squash

	done

	;;

(push)

	for subtree in "${subtrees[@]}"; do

		IFS=: read subtree_owner subtree_name subtree_path <<<"$subtree"

		subtree_repo="git@github.com:$subtree_owner/$subtree_name"

		git subtree push \
			--prefix "$subtree_path" \
			"$subtree_repo" \
			"$project_name"

	done

	;;

(*)

	echo "Invalid command: $1" >&2

	exit 1

esac

# ex: noet ts=4 filetype=bash
