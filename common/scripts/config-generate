#!/bin/bash

set -euf -o pipefail

smtp_hostname="localhost"
smtp_port="25"
smtp_username=""
smtp_password=""

database_username="$USER"
database_password="$USER"

source "local/project-config"
source "config/env-config"

cat > "config/build.properties" <<-END
	database.name = ${database_name}
END

cat > "config/wbs-config.xml" <<-END
	<wbs-config
	  name="${project_title} dev local"
	  home-directory="$(pwd)"
	  console-title="${project_title} dev local"
	  api-url="${public_url}/api"
	  http-user-agent="${project_title} dev local"
	  default-slice="${default_slice}"
	  default-timezone="${default_timezone}"
	  cryptor-seed="${cryptor_seed}">

	  <database
	    hostname="localhost"
	    username="${database_username}"
	    password="${database_password}"
	    database-name="${database_name}"/>

	  <email
	    smtp-hostname="${smtp_username}"
	    smtp-port="${smtp_port}"
	    smtp-username="${smtp_username}"
	    smtp-password="${smtp_password}"
	    default-envelope-from="${developer_email}"
	    default-from-name="${project_title} dev local"
	    default-from-address="${platform_email}"
	    default-reply-to-address="${developer_email}"
	    developer-address="${developer_email}"/>

	  <process-api
	    listen-port="${port_base}082"/>

	  <console-server
	    listen-port="${port_base}083"/>

	</wbs-config>
END

cat > "config/wbs-api-config.xml" <<-END
	<wbs-config
	  name="${project_title} dev local"
	  home-directory="$(pwd)"
	  console-title="${project_title} dev local"
	  api-url="${public_url}/api"
	  http-user-agent="${project_title} dev local"
	  default-slice="${default_slice}"
	  default-timezone="${default_timezone}"
	  cryptor-seed="${cryptor_seed}">

	  <database
	    hostname="localhost"
	    username="${database_username}"
	    password="${database_password}"
	    database-name="${database_name}"/>

	  <email
	    smtp-hostname="${smtp_username}"
	    smtp-port="${smtp_port}"
	    smtp-username="${smtp_username}"
	    smtp-password="${smtp_password}"
	    default-envelope-from="${developer_email}"
	    default-from-name="${project_title} dev local"
	    default-from-address="${platform_email}"
	    default-reply-to-address="${developer_email}"
	    developer-address="${developer_email}"/>

	  <process-api
	    listen-port="${port_base}182"/>

	  <console-server
	    listen-port="${port_base}183"/>

	</wbs-config>
END

cat > "config/wbs-daemon-config.xml" <<-END
	<wbs-config
	  name="${project_title} dev local"
	  home-directory="$(pwd)"
	  console-title="${project_title} dev local"
	  api-url="${public_url}/api"
	  http-user-agent="${project_title} dev local"
	  default-slice="${default_slice}"
	  default-timezone="${default_timezone}"
	  cryptor-seed="${cryptor_seed}">

	  <database
	    hostname="localhost"
	    username="${database_username}"
	    password="${database_password}"
	    database-name="${database_name}"/>

	  <email
	    smtp-hostname="${smtp_username}"
	    smtp-port="${smtp_port}"
	    smtp-username="${smtp_username}"
	    smtp-password="${smtp_password}"
	    default-envelope-from="${developer_email}"
	    default-from-name="${project_title} dev local"
	    default-from-address="${platform_email}"
	    default-reply-to-address="${developer_email}"
	    developer-address="${developer_email}"/>

	  <process-api
	    listen-port="${port_base}282"/>

	  <console-server
	    listen-port="${port_base}283"/>

	</wbs-config>
END

cat > "config/wbs-console-config.xml" <<-END
	<wbs-config
	  name="${project_title} dev local"
	  home-directory="$(pwd)"
	  console-title="${project_title} dev local"
	  api-url="${public_url}/api"
	  http-user-agent="${project_title} dev local"
	  default-slice="${default_slice}"
	  default-timezone="${default_timezone}"
	  cryptor-seed="${cryptor_seed}">

	  <database
	    hostname="localhost"
	    username="${database_username}"
	    password="${database_password}"
	    database-name="${database_name}"/>

	  <email
	    smtp-hostname="${smtp_username}"
	    smtp-port="${smtp_port}"
	    smtp-username="${smtp_username}"
	    smtp-password="${smtp_password}"
	    default-envelope-from="${developer_email}"
	    default-from-name="${project_title} dev local"
	    default-from-address="${platform_email}"
	    default-reply-to-address="${developer_email}"
	    developer-address="${developer_email}"/>

	  <test-users>
	    <test-user name="$test_user_0"/>
	    <test-user name="$test_user_1"/>
	    <test-user name="$test_user_2"/>
	    <test-user name="$test_user_3"/>
	  </test-users>

	  <process-api
	    listen-port="${port_base}082"/>

	  <console-server
	    listen-port="${port_base}083"/>

	</wbs-config>
END

cat > "config/tomcat-users.xml" <<-END
	<?xml version='1.0' encoding='utf-8'?>
	<tomcat-users>
	  <role rolename="tomcat"/>
	  <role rolename="role1"/>
	  <user username="tomcat" password="tomcat" roles="tomcat"/>
	  <user username="both" password="tomcat" roles="tomcat,role1"/>
	  <user username="role1" password="tomcat" roles="role1"/>
	</tomcat-users>
END

cat > "config/nginx-site.conf" <<-END
	server {

	  listen 80;

	  server_name ${dev_hostname};
	  server_name ${vpn_hostname};

	  real_ip_recursive on;
	  real_ip_header X-Forwarded-For;

	  client_max_body_size 64M;

	  location / {
	    proxy_pass http://localhost:${port_base}080;
	    proxy_http_version 1.1;
	  }

	  location /api/ {

	    if (\$request_method = 'OPTIONS') {
	      add_header 'Access-Control-Allow-Origin' '*';
	      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
	      add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
	      add_header 'Access-Control-Max-Age' 1728000;
	      add_header 'Content-Type' 'text/plain charset=UTF-8';
	      add_header 'Content-Length' 0;
	      return 204;
	    }

	    if (\$request_method = 'POST') {
	      add_header 'Access-Control-Allow-Origin' '*';
	      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
	      add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
	    }

	    if (\$request_method = 'GET') {
	      add_header 'Access-Control-Allow-Origin' '*';
	      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
	      add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
	    }

	    proxy_pass http://localhost:${port_base}081/;
	    proxy_http_version 1.1;
	    proxy_set_header X-Real-IP \$remote_addr;
	    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;

	  }

	  location = /_async {
	    proxy_pass http://localhost:${port_base}083;
	    proxy_http_version 1.1;
	    proxy_set_header Upgrade \$http_upgrade;
	    proxy_set_header Connection "upgrade";
	  }

	}
END

# ex: noet ts=4 filetype=bash
